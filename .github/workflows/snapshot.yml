name: Snapshot Build

on:
  push:
    branches:
      - "master"
    paths-ignore:
      - ".github/**"
      - "**/*.md"
  workflow_dispatch:
    branches:
      - "master"

jobs:

  snapshot:

    name: Snapshot Build
    runs-on: ubuntu-latest

    steps:
      - name: Setup Toolchain cache
        uses: actions/cache@v2
        with:
          path: |
            ~/osxcross
          key: toolchain-osxcross

      - name: Set up environment
        run: |
          cd $HOME
          sudo apt-get install mingw-w64 musl-tools
          sudo apt-get install bash clang cmake git patch libssl-dev lzma-dev libxml2-dev llvm-dev
          [ -d "osxcross" ] || git clone https://github.com/tpoechtrager/osxcross
          cd osxcross
          [ -f "tarballs/MacOSX10.10.sdk.tar.xz" ] || wget -nc https://s3.dockerproject.org/darwin/v2/MacOSX10.10.sdk.tar.xz
          [ -f "MacOSX10.10.sdk.tar.xz" ] && mv MacOSX10.10.sdk.tar.xz tarballs/
          [ -f "target/bin/x86_64-apple-darwin14-clang" ] || UNATTENDED=yes OSX_VERSION_MIN=10.10 ./build.sh
          cd $HOME
          chmod -R 777 osxcross
          chmod -R +x osxcross/target/bin
          echo "$(pwd)/osxcross/target/bin" >> $GITHUB_PATH
          mkdir -p .cargo
          touch .cargo/config
          echo '[target.x86_64-apple-darwin]' >> .cargo/config
          echo 'linker = "x86_64-apple-darwin14-clang"' >> .cargo/config
          echo 'ar = "x86_64-apple-darwin14-ar"' >> .cargo/config

      - name: Install Linux Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          profile: minimal
          default: true

      - name: Install Windows Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          profile: minimal

      - name: Install macOS Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          profile: minimal

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Update dependencies
        run: |
          cargo update

      - name: Setup Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Windows release
        env:
          RUSTFLAGS: "-Ctarget-feature=+crt-static,+mmx,+sse,+sse2,+sse3,+ssse3,+cmov,+cx8,+cx16"
          WRAPPE_TARGETS: "x86_64-pc-windows-gnu;x86_64-unknown-linux-musl;x86_64-apple-darwin"
          WRAPPE_OSXCROSS_WORKAROUND: "1"
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-pc-windows-gnu

      - name: Build Linux release
        env:
          RUSTFLAGS: "-Ctarget-feature=+crt-static,+mmx,+sse,+sse2,+sse3,+ssse3,+cmov,+cx8,+cx16"
          WRAPPE_TARGETS: "x86_64-pc-windows-gnu;x86_64-unknown-linux-musl;x86_64-apple-darwin"
          WRAPPE_OSXCROSS_WORKAROUND: "1"
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-unknown-linux-musl

      - name: Build macOS release
        env:
          RUSTFLAGS: "-Ctarget-feature=+crt-static,+mmx,+sse,+sse2,+sse3,+ssse3,+cmov,+cx8,+cx16"
          WRAPPE_TARGETS: "x86_64-pc-windows-gnu;x86_64-unknown-linux-musl;x86_64-apple-darwin"
          WRAPPE_OSXCROSS_WORKAROUND: "1"
          CC: "o64-clang"
          CXX: "o64-clang++"
          AR: "x86_64-apple-darwin14-ar"
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-apple-darwin

      - name: Collect executables
        run: |
          mv target/x86_64-pc-windows-gnu/release/wrappe.exe wrappe.exe
          mv target/x86_64-unknown-linux-musl/release/wrappe wrappe-linux
          mv target/x86_64-apple-darwin/release/wrappe wrappe-macos
          chmod +x wrappe-linux
          chmod +x wrappe-macos

      - name: Strip symbols
        run: |
          strip -s wrappe.exe
          strip -s wrappe-linux
          x86_64-apple-darwin14-strip -x -S wrappe-macos

      - name: Upload release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: snapshot
          prerelease: false
          title: Snapshot
          files: |
            wrappe.exe
            wrappe-linux
            wrappe-macos
