name: Snapshot Build

on:
  push:
    branches:
      - "master"
    paths-ignore:
      - ".github/**"
      - "**/*.md"
      - ".gitignore"
      - ".editorconfig"
      - ".rustfmt.toml"
  workflow_dispatch:
    branches:
      - "master"

jobs:

  snapshot:

    name: Snapshot Build
    runs-on: ubuntu-latest

    steps:
      - name: Setup Toolchain cache
        uses: actions/cache@v2
        with:
          path: |
            ~/osxcross
          key: toolchain-osxcross

      - name: Set up environment
        env:
          OSX_VERSION_MIN: 11.3
          MACOSX_DEPLOYMENT_TARGET: 11.3
        run: |
          cd $HOME
          sudo apt-get install mingw-w64 musl-tools
          sudo apt-get install bash clang cmake git patch libssl-dev lzma-dev libxml2-dev llvm-dev
          [ -d "osxcross" ] || git clone https://github.com/tpoechtrager/osxcross
          cd osxcross
          [ -f "tarballs/MacOSX11.3.sdk.tar.xz" ] || wget -nc https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz
          [ -f "MacOSX11.3.sdk.tar.xz" ] && mv MacOSX11.3.sdk.tar.xz tarballs/
          [ -f "target/bin/x86_64-apple-darwin20.4-clang" ] || UNATTENDED=yes ./build.sh
          ls target/bin
          cd $HOME
          chmod -R 777 osxcross
          chmod -R +x osxcross/target/bin
          echo "$(pwd)/osxcross/target/bin" >> $GITHUB_PATH
          mkdir -p .cargo
          touch .cargo/config
          echo '[target.x86_64-apple-darwin]' >> .cargo/config
          echo 'linker = "x86_64-apple-darwin20.4-clang"' >> .cargo/config
          echo 'ar = "x86_64-apple-darwin20.4-ar"' >> .cargo/config
          echo '[target.aarch64-apple-darwin]' >> .cargo/config
          echo 'linker = "arm64-apple-darwin20.4-clang"' >> .cargo/config
          echo 'ar = "arm64-apple-darwin20.4-ar"' >> .cargo/config

      - name: Install Linux x64 Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          profile: minimal
          default: true

      - name: Install Windows x64 Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          profile: minimal

      - name: Install macOS x64 Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          profile: minimal

      - name: Install macOS ARM Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Update dependencies
        run: |
          cargo update

      - name: Setup Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build macOS ARM release
        env:
          RUSTFLAGS: "-Ctarget-feature=+crt-static"
          WRAPPE_TARGETS: "x86_64-pc-windows-gnu;x86_64-unknown-linux-musl;x86_64-apple-darwin;aarch64-apple-darwin"
          WRAPPE_OSXCROSS_WORKAROUND: "1"
          MACOSX_DEPLOYMENT_TARGET: 11.3
          CC: "oa64-clang"
          CXX: "oa64-clang++"
          AR: "arm64-apple-darwin20.4-ar"
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target aarch64-apple-darwin

      - name: Build Windows x64 release
        env:
          RUSTFLAGS: "-Ctarget-feature=+crt-static"
          WRAPPE_TARGETS: "x86_64-pc-windows-gnu;x86_64-unknown-linux-musl;x86_64-apple-darwin;aarch64-apple-darwin"
          WRAPPE_OSXCROSS_WORKAROUND: "1"
          MACOSX_DEPLOYMENT_TARGET: 11.3
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-pc-windows-gnu

      - name: Build Linux x64 release
        env:
          RUSTFLAGS: "-Ctarget-feature=+crt-static"
          WRAPPE_TARGETS: "x86_64-pc-windows-gnu;x86_64-unknown-linux-musl;x86_64-apple-darwin;aarch64-apple-darwin"
          WRAPPE_OSXCROSS_WORKAROUND: "1"
          MACOSX_DEPLOYMENT_TARGET: 11.3
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-unknown-linux-musl

      - name: Build macOS x64 release
        env:
          RUSTFLAGS: "-Ctarget-feature=+crt-static"
          WRAPPE_TARGETS: "x86_64-pc-windows-gnu;x86_64-unknown-linux-musl;x86_64-apple-darwin;aarch64-apple-darwin"
          WRAPPE_OSXCROSS_WORKAROUND: "1"
          MACOSX_DEPLOYMENT_TARGET: 11.3
          CC: "o64-clang"
          CXX: "o64-clang++"
          AR: "x86_64-apple-darwin20.4-ar"
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-apple-darwin

      - name: Collect executables
        run: |
          mv target/x86_64-pc-windows-gnu/release/wrappe.exe wrappe.exe
          mv target/x86_64-unknown-linux-musl/release/wrappe wrappe-linux
          mv target/x86_64-apple-darwin/release/wrappe wrappe-macos
          mv target/aarch64-apple-darwin/release/wrappe wrappe-macos-arm
          chmod +x wrappe-linux
          chmod +x wrappe-macos
          chmod +x wrappe-macos-arm

      - name: Upload release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: snapshot
          prerelease: false
          title: Snapshot
          files: |
            wrappe.exe
            wrappe-linux
            wrappe-macos
            wrappe-macos-arm
